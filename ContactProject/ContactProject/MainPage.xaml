<phone:PhoneApplicationPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=WindowsPhoneWatermarkTextBoxControl"
    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:Primitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone"

    xmlns:local="clr-namespace:ContactProject"
    xmlns:Converters="clr-namespace:Coding4Fun.Toolkit.Controls.Converters;assembly=Coding4Fun.Toolkit.Controls"
    xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
    x:Class="ContactProject.MainPage"
    mc:Ignorable="d"
    SupportedOrientations="Portrait" Orientation="Portrait"   
    local:TiltEffect.IsTiltEnabled="True"
    shell:SystemTray.IsVisible="True" 
    d:DataContext="{d:DesignData /SampleData/ModelViewSampleData.xaml}">


    <phone:PhoneApplicationPage.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:DateTimeToString x:Key="DateTimeToString"/>

        <DataTemplate x:Name="RecentItemTemplate">
            <Grid Background="Transparent" Margin="0,0,10,10">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock Text="{Binding Time, Converter={StaticResource DateTimeToString}}" FontSize="25" Foreground="Black">
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Margin="7,0,0,17">
                        <TextBlock Text="{Binding FullName, Mode=TwoWay, UpdateSourceTrigger=Default}" FontSize="26" Margin="0,10,0,0" VerticalAlignment="Bottom" FontFamily="Segoe WP Light" Foreground="#BF474343"/>
                        <TextBlock Text="{Binding PhoneNumber, Mode=TwoWay, UpdateSourceTrigger=Default}" FontSize="20" FontFamily="Segoe WP Light" Foreground="#BF474343" />
                    </StackPanel>
                </StackPanel>
                <Grid                         
        			x:Name="phoneCallRecent"
        			VerticalAlignment="Center"
        			HorizontalAlignment="Right"
        			Width="50"
        			Height="50"
        			Margin="0,0,20,6"  Tap="phoneCallRecent_Tap"  
        			>
                    <Ellipse x:Name="elipse" StrokeThickness="4" Stroke="Black"/>
                    <Image Source="Assets/AppBar1/feature.phone-dark.png"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Name="FavoritesItemTemplate">
            <Grid Background="Transparent" Margin="0,0,10,10">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <Image Height="75" Width="75" Margin="10" Source="{Binding Image}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        <StackPanel Margin="0,0,0,17">
                            <TextBlock Text="{Binding FullName, Mode=TwoWay, UpdateSourceTrigger=Default}" FontSize="26" Margin="0,10,0,0" VerticalAlignment="Bottom" FontFamily="Segoe WP Light" Foreground="#BF474343"/>
                            <TextBlock Text="{Binding PhoneNumber, Mode=TwoWay, UpdateSourceTrigger=Default}" FontSize="20" FontFamily="Segoe WP Light" Foreground="#BF474343" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <Grid                         
        			x:Name="phoneCallIcon"
        			VerticalAlignment="Center"
        			HorizontalAlignment="Right"
        			Width="50"
        			Height="50"
        			Margin="0,0,20,6" Tap="phoneCallIcon_Tap"  
        			>
                    <Ellipse x:Name="elipse" StrokeThickness="4" Stroke="Black"/>
                    <Image Source="Assets/AppBar1/feature.phone-dark.png"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <Style x:Key="PivotHeaderItemStyle1" TargetType="Primitives:PivotHeaderItem">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Padding" Value="21,0,1,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Primitives:PivotHeaderItem">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" To="Selected">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                        <VisualTransition From="Selected" GeneratedDuration="0" To="Unselected"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentControl x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Opacity="{StaticResource PhonePivotUnselectedItemOpacity}" FontFamily="/ContactProject;component/Fonts/Fonts.zip#Caviar Dreams" FontSize="48" RenderTransformOrigin="0.5,0.5" Foreground="#F9F9F9" Background="#FFDC5452">
                                <ContentControl.RenderTransform>
                                    <CompositeTransform/>
                                </ContentControl.RenderTransform>
                            </ContentControl>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontFamily" Value="/ContactProject;component/Fonts/Fonts.zip#Lato Light"/>
            <Setter Property="FontSize" Value="96"/>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <Canvas/>
        </ItemsPanelTemplate>
        <Style x:Key="PivotStyle1" TargetType="phone:Pivot">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="phone:Pivot">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="Black">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Background="{TemplateBinding Background}" Grid.RowSpan="3"/>
                            <ContentControl ContentTemplate="{TemplateBinding TitleTemplate}" HorizontalAlignment="Left" Margin="24,17,0,-7" Style="{StaticResource PivotTitleStyle}"/>
                            <Primitives:PivotHeadersControl x:Name="HeadersListElement" Grid.Row="1" ItemContainerStyle="{StaticResource PivotHeaderItemStyle1}" ItemsPanel="{StaticResource ItemsPanelTemplate1}" FontFamily="/ContactProject;component/Fonts/Fonts.zip#Caviar Dreams">
                                <Primitives:PivotHeadersControl.Background>
                                    <SolidColorBrush Color="{StaticResource PhoneBackgroundColor}"/>
                                </Primitives:PivotHeadersControl.Background>
                            </Primitives:PivotHeadersControl>
                            <ItemsPresenter x:Name="PivotItemPresenter" Margin="{TemplateBinding Padding}" Grid.Row="2"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <local:AppSettings x:Key="appSettings"/>
        <DataTemplate x:Name="ContactListGrid">
            <Grid Background="Transparent" Margin="12,10" d:DesignWidth="422.5" d:DesignHeight="527.5">
                <Image Source="{Binding Image}" Stretch="UniformToFill" Opacity="0.8"/>
                <Grid  VerticalAlignment="Top"
        			x:Name="FavoriteQuickAdd"
                    Tap="favIcon_Tap"
        			HorizontalAlignment="Right"
        			Width="40"
        			Height="40"
        			Margin="0,6,6,0"  >
                    <Ellipse x:Name="elipse" Stroke="#D74C47" Fill="{Binding Favorite, Converter={StaticResource BooleanToVisibilityConverter}}" StrokeThickness="3" />
                    <Image Source="/Assets/AppBar1/favs.png"  />
                </Grid>
                <StackPanel  VerticalAlignment="Bottom" Opacity="0.8">
                    <StackPanel.Background>
                        <SolidColorBrush Color="#20A7D8"/>
                    </StackPanel.Background>
                    <TextBlock Text="{Binding FullName}">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="White"/>
                        </TextBlock.Foreground>
                    </TextBlock>
                </StackPanel>

            </Grid>
        </DataTemplate>

        <phone:JumpListItemBackgroundConverter x:Key="BackgroundConverter"/>
        <phone:JumpListItemForegroundConverter x:Key="ForegroundConverter"/>
        <Style x:Key="AddrBookJumpListStyle" TargetType="phone:LongListSelector">
            <Setter Property="GridCellSize"  Value="113,113"/>
            <Setter Property="LayoutMode" Value="Grid" />
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Background="{Binding Converter={StaticResource BackgroundConverter}}" Width="113" Height="113" Margin="6">
                            <TextBlock Text="{Binding Key}"  Padding="6" 
        						Foreground="{Binding Converter={StaticResource ForegroundConverter}}" VerticalAlignment="Center" FontFamily="Segoe UI Semibold" FontSize="22" FontWeight="Bold" HorizontalAlignment="Left"/>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="borderBackground" Color="#CC2B2626"/>

        <local:BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <DataTemplate x:Key="AddrBookItemTemplate">
            <Grid Background="Transparent" Margin="0,0,0,10">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <Image Height="75" Width="75" Margin="10" Source="{Binding Image}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    <StackPanel Margin="0,0,0,17">
                        <TextBlock Text="{Binding FullName, Mode=TwoWay, UpdateSourceTrigger=Default}" FontSize="26" Margin="0,10,0,0" VerticalAlignment="Bottom" FontFamily="/ContactProject;component/Fonts/Fonts.zip#Lato" Foreground="#BF474343"/>
                        <TextBlock Text="{Binding PhoneNumber, Mode=TwoWay, UpdateSourceTrigger=Default}" FontSize="20" FontFamily="/ContactProject;component/Fonts/Fonts.zip#Lato Light" Foreground="#BF474343" />
                    </StackPanel>
                </StackPanel>
                <Grid     
                    
        			x:Name="favIcon"
        			VerticalAlignment="Center"
        			HorizontalAlignment="Right"
        			Width="50"
        			Height="50"
        			Margin="0,0,0,6"  
        			Tap="favIcon_Tap">

                    <Ellipse x:Name="elipse" Stroke="Black" StrokeThickness="4" Fill="{Binding Favorite, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Image Source="Assets/AppBar1/favs-dark.png"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="AddrBookHeaderTemplate">
            <Border Background="#354B60" Padding="0,0,0,0" Margin="0" BorderThickness="0,0,0,0">
                <TextBlock Text="{Binding Key}" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Lato Black" FontSize="30" FontWeight="Bold" />
            </Border>
        </DataTemplate>

        <ControlTemplate x:Key="PhoneScrollbarThumb" TargetType="Thumb">
            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" IsHitTestVisible="False" Width="{TemplateBinding Width}"/>
        </ControlTemplate>
        <Style x:Key="ScrollBarStyle1" TargetType="ScrollBar">
            <Setter Property="Background" Value="{StaticResource PhoneDisabledBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="5"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid>
                            <Grid x:Name="VerticalRoot" Width="{TemplateBinding Width}" Background="#FFF3F3F3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="VerticalSmallDecrease" Visibility="Collapsed"/>
                                <RepeatButton x:Name="VerticalLargeDecrease" Grid.Row="1" Template="{x:Null}" Width="0"/>
                                <Thumb x:Name="VerticalThumb" Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}" MinHeight="72" Grid.Row="2" Template="{StaticResource PhoneScrollbarThumb}" Width="{TemplateBinding Width}"/>
                                <RepeatButton x:Name="VerticalLargeIncrease" Grid.Row="3" Template="{x:Null}" Width="0"/>
                                <RepeatButton x:Name="VerticalSmallIncrease" Visibility="Collapsed"/>
                            </Grid>
                            <Grid x:Name="HorizontalRoot" Background="Transparent" Height="{TemplateBinding Height}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="HorizontalSmallDecrease" Visibility="Collapsed"/>
                                <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" Height="0" Template="{x:Null}"/>
                                <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" Grid.Column="2" Height="{TemplateBinding Height}" Margin="{TemplateBinding Padding}" MinWidth="0" Template="{StaticResource PhoneScrollbarThumb}"/>
                                <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" Height="0" Template="{x:Null}"/>
                                <RepeatButton x:Name="HorizontalSmallIncrease" Visibility="Collapsed"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ViewportControlStyle1" TargetType="ViewportControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ViewportControl">
                        <ContentPresenter x:Name="ContentElement" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="Padding" Value="10,5,10,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="LongListMultiSelectorItemGridStyle" TargetType="toolkit:LongListMultiSelectorItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="toolkit:LongListMultiSelectorItem">
                        <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionTriangle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionCheck">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HasSelectionStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OuterCover">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="1" >
                                <ContentControl x:Name="ContentContainer"
 Margin="3"
 ContentTemplate="{TemplateBinding ContentTemplate}"
 Content="{TemplateBinding Content}"
 Foreground="{TemplateBinding Foreground}"
 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
 />
                                <Rectangle x:Name="SelectionRectangle" Visibility="Collapsed"
 Stroke="{StaticResource PhoneAccentBrush}" StrokeThickness="2"/>
                                <Polyline x:Name="SelectionTriangle" Visibility="Collapsed"
 HorizontalAlignment="Right" VerticalAlignment="Top"
 Points="50,0 50,50 0,0"
 Fill="{StaticResource PhoneAccentBrush}"
 />
                                <Polyline x:Name="SelectionCheck" Visibility="Collapsed"
 Margin="5" HorizontalAlignment="Right" VerticalAlignment="Top"
 Points="40,0 43,3 28,18 18,8 21,5 28,12"
 Fill="{StaticResource PhoneForegroundBrush}"
 />
                                <Grid x:Name="OuterCover" IsHitTestVisible="True" Visibility="Collapsed" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhoneRadioButtonCheckBoxBase" BasedOn="{StaticResource PhoneButtonBase}" TargetType="ToggleButton">
            <Setter Property="Background" Value="{StaticResource PhoneRadioCheckBoxBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneRadioCheckBoxBorderBrush}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style x:Key="CheckBoxStyle1" BasedOn="{StaticResource PhoneRadioButtonCheckBoxBase}" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Background="Transparent" HorizontalAlignment="Left">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{StaticResource PhoneTouchTargetLargeOverhang}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" VerticalAlignment="Top">
                                    <Border x:Name="CheckBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource PhoneBorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Left" Height="32" IsHitTestVisible="False" VerticalAlignment="Center" Width="32"/>
                                    <Rectangle x:Name="IndeterminateMark" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}" HorizontalAlignment="Center" Height="16" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Center" Width="16"/>
                                    <Path x:Name="CheckMark" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="21" IsHitTestVisible="False" Stretch="Fill" StrokeThickness="3" StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" Width="23" Fill="#AD000000"/>
                                </Grid>
                                <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="12,0,0,0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LongListMultiSelectorItemListStyle" TargetType="toolkit:LongListMultiSelectorItem">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource PhoneAccentBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="toolkit:LongListMultiSelectorItem">
                            <Grid MinHeight="52">
                                <Grid.Resources>
                                    <ExponentialEase EasingMode="EaseIn" Exponent="8" x:Key="ExponentialEaseIn"/>
                                    <QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionEnabledStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition x:Name="ClosedToExposed" 
 From="Closed" To="Exposed"
 GeneratedDuration="0:0:0.30">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
 Storyboard.TargetName="OuterHintPanel">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="ExposedToClosed" 
 From="Exposed" To="Closed"
 GeneratedDuration="0:0:0.30">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
 Storyboard.TargetName="OuterHintPanel">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="ExposedToOpened"
 From="Exposed" To="Opened"
 GeneratedDuration="0:0:0.30">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="SelectBox">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="Presenter">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
 Storyboard.TargetName="OuterHintPanel">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
 Storyboard.TargetName="SelectBox">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
 Storyboard.TargetName="OuterHintPanel">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
 Storyboard.TargetName="InnerHintPanel">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="ClosedToOpened"
 From="Closed" To="Opened"
 GeneratedDuration="0:0:0.15">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="SelectBox">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="Presenter">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
 Storyboard.TargetName="SelectBox">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
 Storyboard.TargetName="OuterHintPanel">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
 Storyboard.TargetName="InnerHintPanel">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OpenedToClosed"
 From="Opened" To="Closed"
 GeneratedDuration="0:0:0.15">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="SelectBox">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="Presenter">
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="86" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="24" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
 Storyboard.TargetName="SelectBox">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualStateGroup.States>
                                            <VisualState x:Name="Closed"/>
                                            <VisualState x:Name="Exposed">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
 Storyboard.TargetName="OuterHintPanel"
 Duration="0" To="1.0"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Opened">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="SelectBox"
 Duration="0" To="0"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
 Storyboard.TargetName="Presenter"
 Duration="0" To="86"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
 Storyboard.TargetName="SelectBox">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
 Storyboard.TargetName="OuterCover">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
 Storyboard.TargetName="OuterHintPanel"
 Duration="0" To="0.0"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
 Storyboard.TargetName="OuterHintPanel">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
 Storyboard.TargetName="InnerHintPanel">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup.States>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" HorizontalAlignment="Stretch" >
                                        <ContentPresenter x:Name="Presenter">
                                            <ContentPresenter.RenderTransform>
                                                <CompositeTransform TranslateX="24"/>
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                    </Grid>
                                    <Rectangle x:Name="InnerHintPanel" Grid.Column="0" Width="24"
 Height="{TemplateBinding HintPanelHeight}"
 HorizontalAlignment="Left"
 Fill="Transparent"
 StrokeThickness="0">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform TranslateX="24"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <ContentControl x:Name="InfoPresenter" Grid.Column="1" 
 VerticalAlignment="Top"
 Content="{TemplateBinding ContentInfo}"
 ContentTemplate="{TemplateBinding ContentInfoTemplate}"/>
                                </Grid>
                                <Rectangle x:Name="OuterHintPanel" Width="24"
 HorizontalAlignment="Left"
 Height="{TemplateBinding HintPanelHeight}"
 Fill="{TemplateBinding Background}"
 StrokeThickness="0" Opacity="0.0"/>
                                <Grid x:Name="OuterCover" IsHitTestVisible="True"
 Visibility="Collapsed" Background="Transparent"/>
                                <Canvas HorizontalAlignment="Left">
                                    <CheckBox x:Name="SelectBox" VerticalAlignment="Top" Margin="12,12,5,0" Visibility="Collapsed"
 IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}" Background="{x:Null}" BorderBrush="#AD000000" Style="{StaticResource CheckBoxStyle1}">
                                        <CheckBox.RenderTransform>
                                            <CompositeTransform TranslateX="-58"/>
                                        </CheckBox.RenderTransform>
                                    </CheckBox>
                                </Canvas>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="PivotItemStyle1" TargetType="phone:PivotItem">
            <Setter Property="Background" Value="#FFDC5452"/>
            <Setter Property="Margin" Value="{StaticResource PivotItemMargin}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="phone:PivotItem">
                        <Grid Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Pivot">
                                    <VisualState x:Name="Right1"/>
                                    <VisualState x:Name="Left1"/>
                                    <VisualState x:Name="Center1"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </phone:PhoneApplicationPage.Resources>


    <toolkit:TransitionService.NavigationInTransition>
        <toolkit:NavigationInTransition>
            <toolkit:NavigationInTransition.Backward>
                <toolkit:TurnstileFeatherTransition Mode="BackwardIn" />
            </toolkit:NavigationInTransition.Backward>
            <toolkit:NavigationInTransition.Forward>
                <toolkit:RollTransition/>
            </toolkit:NavigationInTransition.Forward>
        </toolkit:NavigationInTransition>
    </toolkit:TransitionService.NavigationInTransition>
    <toolkit:TransitionService.NavigationOutTransition>
        <toolkit:NavigationOutTransition>
            <toolkit:NavigationOutTransition.Backward>
                <toolkit:TurnstileTransition Mode="BackwardOut" />
            </toolkit:NavigationOutTransition.Backward>
            <toolkit:NavigationOutTransition.Forward>
                <toolkit:SlideTransition Mode="SlideLeftFadeOut" />
            </toolkit:NavigationOutTransition.Forward>
        </toolkit:NavigationOutTransition>
    </toolkit:TransitionService.NavigationOutTransition>

    <phone:PhoneApplicationPage.FontFamily>
        <StaticResource ResourceKey="PhoneFontFamilyNormal"/>
    </phone:PhoneApplicationPage.FontFamily>
    <phone:PhoneApplicationPage.FontSize>
        <StaticResource ResourceKey="PhoneFontSizeNormal"/>
    </phone:PhoneApplicationPage.FontSize>
    <phone:PhoneApplicationPage.Foreground>
        <StaticResource ResourceKey="PhoneForegroundBrush"/>
    </phone:PhoneApplicationPage.Foreground>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <phone:Pivot x:Name="MainPagePivot" Title="MY APPLICATION" Grid.RowSpan="2" Style="{StaticResource PivotStyle1}" Foreground="{x:Null}" ItemContainerStyle="{StaticResource PivotItemStyle1}" SelectionChanged="MainPagePivot_SelectionChanged">
            <phone:Pivot.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFDC5452" Offset="0.125"/>
                    <GradientStop Color="#FFF3F3F3" Offset="0.125"/>
                </LinearGradientBrush>
            </phone:Pivot.Background>
            <!--Pivot item one-->
            <phone:PivotItem Header="contact list" Background="{x:Null}" Margin="0,19,0,0" Foreground="{x:Null}">
                <phone:LongListSelector    
					x:Name="ContactList"
					IsGroupingEnabled="true"
					LayoutMode="List"
					Margin="0,0,0,0"
					Hold="ContactList_Hold"
                        
					JumpListStyle="{StaticResource AddrBookJumpListStyle}"
					SelectionChanged="ContactList_SelectionChanged"
					GroupHeaderTemplate="{StaticResource AddrBookHeaderTemplate}"
					HideEmptyGroups ="true" d:DataContext="{d:DesignData /SampleData/ModelViewSampleData.xaml}"
					DataContext="{Binding}"
					ItemsSource="{Binding}" Background="{x:Null}">
                    <phone:LongListSelector.Style>
                        <Style TargetType="phone:LongListSelector">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="phone:LongListSelector">
                                        <Grid Background="{TemplateBinding Background}" d:DesignWidth="480" d:DesignHeight="800">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="ScrollStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="00:00:00.5"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Scrolling">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalScrollBar"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="NotScrolling"/>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid Margin="{TemplateBinding Padding}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <ViewportControl x:Name="ViewportControl" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Style="{StaticResource ViewportControlStyle1}"/>
                                                <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" Margin="0" Opacity="0" Orientation="Vertical" Style="{StaticResource ScrollBarStyle1}" Background="#AA000000" Foreground="#AA000000"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </phone:LongListSelector.Style>
                </phone:LongListSelector>

            </phone:PivotItem>

            <!--Pivot item two-->
            <phone:PivotItem Header="favorites" Background="#FFF3F3F3" Margin="0,28,0,0">
                <toolkit:LongListMultiSelector                   
					x:Name="FavoritesList"
                    ItemContainerStyle="{StaticResource LongListMultiSelectorItemListStyle}"
					ItemsSource="{Binding}"
					ItemTemplate="{StaticResource FavoritesItemTemplate}" IsSelectionEnabledChanged="FavoritesList_IsSelectionEnabledChanged" SelectionChanged="FavoritesList_SelectionChanged"/>
            </phone:PivotItem>

            <phone:PivotItem Header="recent" Background="#FFF3F3F3" Margin="0,28,0,0">
                <toolkit:LongListMultiSelector
					x:Name="recentList"
					Margin="10,0,-10,0"                    
					LayoutMode="List"
					ItemTemplate="{StaticResource RecentItemTemplate}" Foreground="Black"
                    ItemContainerStyle="{StaticResource LongListMultiSelectorItemListStyle}"
                    ItemsSource="{Binding Path=ContactName}" SelectionChanged="recentList_SelectionChanged" IsSelectionEnabledChanged="recentList_IsSelectionEnabledChanged"
                    
                    />
            </phone:PivotItem>
        </phone:Pivot>


        <!--Pivot Control-->
    </Grid>
</phone:PhoneApplicationPage>